# Generated by Django 2.2.5 on 2019-10-17 09:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NetworkTopology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topology_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ProcessedLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_type', models.CharField(choices=[('Traffic', 'Traffic'), ('Threat', 'Threat'), ('URL Filtering', 'URL Filtering'), ('WildFire   Submission', 'WildFire Submission'), ('Data Filtering', 'Data Filtering'), ('Correlation', 'Correlation'), ('HIP Matching', 'HIP Matching'), ('System', 'System'), ('Alarms', 'Alarms'), ('Unified', 'Unified')], default=('Traffic', 'Traffic'), max_length=50)),
                ('log_name', models.CharField(max_length=250)),
                ('log_date', models.DateField(auto_now_add=True)),
                ('log_process_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='RuleDictionary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date_time', models.DateTimeField(auto_now_add=True)),
                ('rule_name', models.CharField(max_length=250)),
                ('source_ip', models.CharField(max_length=50)),
                ('destination_ip', models.CharField(max_length=50)),
                ('application', models.CharField(max_length=50)),
                ('rule_description', models.CharField(max_length=250)),
                ('is_verified_rule', models.BooleanField(default=False)),
                ('verified_date_time', models.DateTimeField(auto_now=True)),
                ('verified_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VirtualSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('domain_url', models.CharField(default='localhost', max_length=250)),
                ('domain_code', models.CharField(max_length=50)),
                ('tenant_name', models.CharField(default='tenant', max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='TimeSeriesBytes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datestamp', models.DateTimeField()),
                ('fact', models.FloatField()),
                ('yhat', models.FloatField()),
                ('yhat_upper', models.FloatField()),
                ('yhat_lower', models.FloatField()),
                ('trend', models.FloatField()),
                ('importance', models.FloatField()),
                ('is_anomaly', models.BooleanField()),
                ('processed_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bytes_anomaly_detection_processed_log', to='core.ProcessedLog')),
                ('virtual_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bytes_anomaly_detection_virtual_system', to='core.VirtualSystem')),
            ],
            options={
                'ordering': ['datestamp'],
            },
        ),
        migrations.CreateModel(
            name='RuleDictionaryMIS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('total_bytes', models.BigIntegerField()),
                ('total_bytes_sent', models.BigIntegerField()),
                ('total_bytes_received', models.BigIntegerField()),
                ('total_packets', models.BigIntegerField()),
                ('total_packets_sent', models.BigIntegerField()),
                ('total_packets_received', models.BigIntegerField()),
                ('rule_dictionary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rule_dictionary_mis_rule_dictionary', to='core.RuleDictionary')),
            ],
        ),
        migrations.AddField(
            model_name='ruledictionary',
            name='virtual_system',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.VirtualSystem'),
        ),
        migrations.CreateModel(
            name='NetworkTopologyDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_name', models.CharField(max_length=250)),
                ('device_type', models.CharField(choices=[('Unmanaged Switch', 'Unmanaged Switch'), ('Managed Switch', 'Managed Switch'), ('Router', 'Router'), ('Bridge', 'Bridge'), ('Gateway', 'Gateway'), ('ISP', 'ISP'), ('Host', 'Host')], max_length=100)),
                ('zone', models.CharField(max_length=100)),
                ('network_topology', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='network_topology_details_network_topology', to='core.NetworkTopology')),
                ('parent_device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.NetworkTopologyDetails')),
            ],
        ),
        migrations.AddField(
            model_name='networktopology',
            name='virtual_system',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='network_topology_virtual_system', to='core.VirtualSystem'),
        ),
        migrations.CreateModel(
            name='IPDictionary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(max_length=50)),
                ('ip_name', models.CharField(max_length=150)),
                ('ip_public_private_type', models.CharField(choices=[('Public', 'Public'), ('Private', 'Private')], max_length=50)),
                ('device_type', models.CharField(choices=[('Switch', 'Switch'), ('Router', 'Router'), ('ApplicationServer', 'ApplicationServer'), ('DbServer', 'DbServer'), ('EndUser', 'EndUser')], max_length=50)),
                ('description', models.CharField(max_length=250)),
                ('virtual_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.VirtualSystem')),
            ],
        ),
    ]
